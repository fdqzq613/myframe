server:
  port: 8682
  main:
    allow-bean-definition-overriding: true
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes:
        - id: api
          uri: lb://some-api-service
          predicates:
            #http://localhost:8682/api/test/get
            - Path=/api/**
            - Weight=apiservice, 1
          filters:
            - name: RequestRateLimiter
              args:
                #允许用户每秒处理多少个请求
                redis-rate-limiter.replenishRate: 10
                #令牌桶的容量，允许在一秒钟内完成的最大请求数
                redis-rate-limiter.burstCapacity: 20
                #使用SpEL按名称引用bean
                key-resolver: "#{@ipKeyResolver}"
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/fallback'
            - Token
            - RewritePath=/gray/(?<segment>.*),/$\{segment}
        - id: api-gray
          uri: lb://some-api-gray-service
          #http://localhost:8682/gray/test/get
          predicates:
            - Path=/gray/**
            - Weight=apiservice, 2
          filters:
            - name: RequestRateLimiter
              args:
                #允许用户每秒处理多少个请求
                redis-rate-limiter.replenishRate: 10
                #令牌桶的容量，允许在一秒钟内完成的最大请求数
                redis-rate-limiter.burstCapacity: 20
                #使用SpEL按名称引用bean
                key-resolver: "#{@ipKeyResolver}"
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/fallback'
            - Token
            - RewritePath=/gray/(?<segment>.*),/$\{segment}


  #redis集群
  redis:
    host: 192.168.20.138
    password: 123456
    port: 6379
    database: 0
    timeout: 60s  # 数据库连接超时时间，2.0 中该参数的类型为Duration，这里在配置的时候需要指明单位
    # 连接池配置，2.0中直接使用jedis或者lettuce配置连接池
    jedis:
      pool:
        # 最大空闲连接数
        max-idle: 500
        # 最小空闲连接数
        min-idle: 50
        # 等待可用连接的最大时间，负数为不限制
        max-wait:  5s
        # 最大活跃连接数，负数为不限制
        max-active: 1000


#熔断
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            #目前有两个容器实例，单个请求超时5s,+重试>10s，超15s则熔断
            timeoutInMilliseconds: 15000
        timeout:
          enabled: true

#oauth2配置
auth-server: http://localhost:7585/sso
security:
  oauth2:
    client:
      client-id: client_2
      client-secret: 123456
      user-authorization-uri: ${auth-server}/oauth/authorize
      access-token-uri: ${auth-server}/oauth/token
    resource:
      jwt:
        key-uri: ${auth-server}/oauth/token_key
      scope: all

#Eureka 相关配置
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8085/eureka/
  # 是否从其他的服务中心同步服务列表
      fetch-registry: true
  # 是否把自己作为服务注册到其他服务注册中心
      register-with-eureka: false


